/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Telas;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author Mariane
 */
public class TelaLogin extends javax.swing.JFrame {
    final private String driver = "com.mysql.jdbc.Driver";
    Connection CONEXAO;
    private boolean VERIFICACAO = false;

    /**
     * Creates new form TelaLogin
     */
    public TelaLogin() {
        initComponents();
        
        //Para trazer o valor que foi salvo na configuração
        if (VERIFICACAO == false) {
            LeConfiguracaoGravada();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        T_Host = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        T_User = new javax.swing.JTextField();
        T_Porta = new javax.swing.JTextField();
        T_Senha = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Configuração da Conexão com o BD");
        setResizable(false);

        T_Host.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                T_HostActionPerformed(evt);
            }
        });

        jButton1.setText("Testar Conexão");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        T_User.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                T_UserActionPerformed(evt);
            }
        });

        T_Porta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                T_PortaActionPerformed(evt);
            }
        });

        T_Senha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                T_SenhaActionPerformed(evt);
            }
        });

        jButton2.setText("Salvar");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Hostname:");

        jLabel4.setText("Porta:");

        jLabel5.setText("Username:");

        jLabel6.setText("Password:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(235, 235, 235)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(T_Porta, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(T_Host, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(T_Senha)
                            .addComponent(T_User, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(33, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(49, 49, 49)
                .addComponent(jButton2)
                .addGap(100, 100, 100))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(T_Host, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(T_Porta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(T_User, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(T_Senha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleDescription("");

        setSize(new java.awt.Dimension(444, 266));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Btn Teste
        if (ConexaoServidor(T_Host.getText(), T_Porta.getText(), T_User.getText(), T_Senha.getText())) {
            JOptionPane.showMessageDialog(null, "Teste bem sucedido!");
            jButton2.setEnabled(true);
        }
        else {
            JOptionPane.showMessageDialog(null, "Falha na conexão.", "Falha", 0);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void T_HostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_T_HostActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_T_HostActionPerformed

    private void T_UserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_T_UserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_T_UserActionPerformed

    private void T_PortaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_T_PortaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_T_PortaActionPerformed

    private void T_SenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_T_SenhaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_T_SenhaActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //Btn Salvar
        if (ConexaoServidor(T_Host.getText(), T_Porta.getText(), T_User.getText(), T_Senha.getText())) {
            if (GravaConfiguracao()) {
                if (LeConfiguracaoGravada()) {
                    if (CriaBD()) {
                        FechaConexao();
                        new Menu().setVisible(true);
                        dispose();
                    }
                    else 
                        jButton2.setEnabled(false);                    
                }
                else 
                    jButton2.setEnabled(false);
            }
            else 
                jButton2.setEnabled(false);
        }
        else 
            jButton2.setEnabled(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        //Vai verificar se alguma configuração já foi salva, se ja foi vai abrir o menu
        TelaLogin EstaTela = new TelaLogin();
        if (EstaTela.LeConfiguracaoGravada()) {
            if (EstaTela.CriaBD()) {
                EstaTela.VERIFICACAO = true;
                EstaTela.FechaConexao();
                new Menu().setVisible(true);
            }
        }
        
        if (EstaTela.VERIFICACAO == false) {
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new TelaLogin().setVisible(true);
                }
            });
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField T_Host;
    private javax.swing.JTextField T_Porta;
    private javax.swing.JTextField T_Senha;
    private javax.swing.JTextField T_User;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    // End of variables declaration//GEN-END:variables

    private boolean LeConfiguracaoGravada() {
        boolean leitura = false;
        try {
            String linha;
            // Vai buscar no local que foi gravado anteriormente o arquivo txt
            String ArquivoConfiguracao = "C:/ConexaoBanco/Configuracao/conexao.txt";
            int cont = 0;
            File arq = new File(ArquivoConfiguracao);
            //Verifica se o arquivo existe
            if (arq.exists()) {
                FileReader reader = new FileReader(ArquivoConfiguracao);
                BufferedReader leitor = new BufferedReader(reader);
                while (true) {
                    linha = leitor.readLine();
                    if (cont == 0) {
                        T_Host.setText(linha);                        
                    }
                    
                    if (cont == 1) {
                        T_Porta.setText(linha);                        
                    }
                    
                    if (cont == 2) {
                        T_User.setText(linha);                        
                    }
                    
                    if (cont >= 3) {
                        T_Senha.setText(linha);
                        break;
                    }
                    
                    System.out.println(linha);
                    cont++;
                }                
            }
            
            if (arq.exists()) {
                // Vai ler a conexao com o servidor atraves dos parametros passados
                if (ConexaoServidor(T_Host.getText(), T_Porta.getText(), T_User.getText(), T_Senha.getText())) {
                    leitura = true;
                }
            }
        }
        
        catch (Exception erro) {
                            
        }
        return leitura;
    }
    
    private boolean GravaConfiguracao() {
        boolean grava = false;
        
        try {
            //Verifica se existe esse caminho
            File diretorio = new File("C:/ConexaoBanco/Configuracao");
            if (!diretorio.exists()) {
                //Se não tiver cria
                diretorio.mkdirs();
            }
            //Grava um arquivo txt com as configurações do BD
            FileWriter arq1 = new FileWriter("C:/ConexaoBanco/Configuracao/conexao.txt");
            PrintWriter gravarArq = new PrintWriter(arq1);
            gravarArq.println(T_Host.getText());
            gravarArq.println(T_Porta.getText());
            gravarArq.println(T_User.getText());
            gravarArq.println(T_Senha.getText());
            arq1.close();
            grava = true;
        }
        catch (IOException erro) {
            JOptionPane.showMessageDialog(null, "Usuário sem permissão para configurar o Banco de Dados", "Erro", 0);
        }
        return grava;
    }
    
    private boolean ConexaoServidor(String Servidor, String Porta, String usuario, String Senha) {
        boolean com = false;
        String SERVIDOR = Servidor;
        String PORTA_CONEXAO = Porta;
        String USUARIO = usuario;
        String SENHA = Senha;
        
        try {
            Class.forName(driver);
            CONEXAO = DriverManager.getConnection("jdbc:mysql://" + SERVIDOR + ":" + PORTA_CONEXAO + "",
                    USUARIO, SENHA);
			com = true;
        }
        catch (ClassNotFoundException Fonte) {
            JOptionPane.showConfirmDialog(null, "Driver não localizado.");
        }
        catch (SQLException Fonte) {            
        }
        return com;
    }
    
    private boolean ConexaoBD(String Servidor, String Porta, String usuario, String Senha) {
        boolean com = false;
        String SERVIDOR = Servidor;
        String PORTA_CONEXAO = Porta;
        String USUARIO = usuario;
        String SENHA = Senha;
        
        try {
            Class.forName(driver);
            CONEXAO = DriverManager.getConnection("jdbc:mysql://" + SERVIDOR + ":" + PORTA_CONEXAO + "/SistemaEscola", USUARIO, SENHA);
            com = true;
        }
        catch (ClassNotFoundException Fonte) {
            JOptionPane.showConfirmDialog(null, "Driver não localizado.");
        }
        catch (SQLException Fonte) {            
        }
        return com;
    }
    
    private  void FechaConexao() {
        try {
            CONEXAO.close();
        }
        catch (SQLException fech) {
            JOptionPane.showMessageDialog(null, "Não foi possível fechar a conexão com o Banco de Dados" + fech);
        }
    }
    
    private boolean CriaBD() {
        boolean sucesso = true;
        if (CriaBanco() == false) {
            sucesso = false;
        }
        else
            if (CriaTabelas() == false) {
                sucesso = false;
            }
        return sucesso;
    }
    
    private boolean CriaBanco() {
        boolean sucesso = false;
        PreparedStatement stm;
        String sql = "CREATE DATABASE IF NOT EXISTS SistemaEscola;";
        
        try {
            stm = CONEXAO.prepareStatement(sql);
            stm.execute();
            sucesso = true;
        }
        
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro", 0);
        }
        return sucesso;
}    
    
    private boolean CriaTabelas() {
        boolean sucesso = true;
        ConexaoBD(T_Host.getText(), T_Porta.getText(), T_User.getText(), T_Senha.getText());
        
        if (CriaTabelaCurso() == false) {
            sucesso = false;
        }
        else
            if (CriaTabelaAluno() == false) {
                sucesso = false;
            }
            else
                if (CriaTabelaCurso_Aluno() == false) {
                    sucesso = false;
                }
        
        FechaConexao();
        return sucesso;
}
        
    private boolean CriaTabelaCurso() {
        boolean sucesso = false;
        PreparedStatement stm;
        String sql = "CREATE TABLE IF NOT EXISTS Curso (" +
                     " Codigo    INT PRIMARY KEY," +
                     " Descricao VARCHAR(50),"     +
                     " Ementa    TEXT(100)"        +
                     " );";
        
        try {
            stm = CONEXAO.prepareStatement(sql);
            stm.execute();
            sucesso = true;
        }
        
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro", 0);
        }
        return sucesso;
}
    
    private boolean CriaTabelaAluno() {
        boolean sucesso = false;
        PreparedStatement stm;
        String sql = "CREATE TABLE IF NOT EXISTS Aluno (" +
                     " Codigo INT PRIMARY KEY," +
                     " Nome   VARCHAR(50)"     +
                     " );";
        
        try {
            stm = CONEXAO.prepareStatement(sql);
            stm.execute();
            sucesso = true;
        }
        
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro", 0);
        }
        return sucesso;
}
    
    private boolean CriaTabelaCurso_Aluno() {
        boolean sucesso = false;
        PreparedStatement stm;
        String sql = "CREATE TABLE IF NOT EXISTS Curso_Aluno (" +
                     " Codigo       INT PRIMARY KEY," +
                     " Codigo_Aluno INT,"             +
                     " Codigo_Curso INT,"             +
                     " CONSTRAINT FK_Codigo_Aluno FOREIGN KEY (Codigo_Aluno) " +
                     " REFERENCES Aluno(Codigo)," +
                     " CONSTRAINT FK_Codigo_Curso FOREIGN KEY (Codigo_Curso) " +
                     " REFERENCES Curso(Codigo)" +
                     ");";
        
        try {
            stm = CONEXAO.prepareStatement(sql);
            stm.execute();
            sucesso = true;
        }
        
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro", 0);
        }
        return sucesso;
}
    
}
